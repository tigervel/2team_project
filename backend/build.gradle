plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation 추가
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2' // H2 인메모리 데이터베이스 추가
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.1'  
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.security:spring-security-oauth2-client:6.5.1'
    implementation 'org.springframework.security:spring-security-oauth2-core:6.5.1'
    implementation 'org.springframework.security:spring-security-oauth2-jose:6.5.1'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}
compileJava {
	options.compilerArgs << '-parameters'
}
    

compileJava {
	options.compilerArgs << '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 컴파일 시 파라미터 이름 정보 보존 (다른 환경에서의 400 에러 방지)
tasks.withType(JavaCompile) {
	options.compilerArgs += ['-parameters']
}
