spring.application.name=backend

########################################
# Server / Logging
########################################
server.port=8080
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.io.jsonwebtoken=TRACE
logging.level.org.springframework.security.oauth2=DEBUG
debug=false

# =========================

# DB

# =========================

# MySQL ì´ì DB ì°ê²°
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
#집에서 하실분들은 이거 주석 해제하고 밑에 로컬 주소를 주석처리하고 해주세요

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://172.16.250.49:3306/2teamproject
#spring.datasource.username=2team
#spring.datasource.password=1234

# H2 ê°ë°ì© DB ì¤ì  (ì£¼ìì²ë¦¬)
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.username=sa
# spring.datasource.password=

# =========================

# JPA

# =========================

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# =========================

# H2 Console (off in prod)

# =========================

spring.h2.console.enabled=false

# spring.h2.console.path=/h2-console

# spring.h2.console.settings.web-allow-others=true

# =========================

# Thymeleaf / Upload

# =========================

spring.thymeleaf.cache=false
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB
com.fullstack.upload.path=upload

# =========================

# OAuth2 (Frontend Base)

# SuccessHandlerìì ë¦¬ë¤ì´ë í¸ ëª©ì ì§

# =========================

frontend.base-url=http://localhost:3000

# =========================

# NAVER OAuth2

# =========================

spring.security.oauth2.client.registration.naver.client-id=neoUA3EdRmckzWTiDCOh
spring.security.oauth2.client.registration.naver.client-secret=9TAyhJRbgv
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response   # ìëµì´ {response:{...}}

# =========================

# GOOGLE OAuth2

# (scopeì openid ì¶ê° ê¶ì¥)

# =========================

spring.security.oauth2.client.registration.google.client-id=1056453451424-4ib32lo1sro5f83oj3dlovcrs42a2ple.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# =========================

# KAKAO OAuth2 (ìë¡ ì¶ê°)

# =========================

spring.security.oauth2.client.registration.kakao.client-id=565114d3ec7b2515badd76cddff1136a
spring.security.oauth2.client.registration.kakao.client-secret=zfp2TkCWYXcJ3obFr691DyQVd8b2pQtE
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# =========================

# Mail (Naver SMTP)

# =========================

spring.mail.host=smtp.naver.com
spring.mail.port=587
spring.mail.username=wjdgus2103@naver.com
spring.mail.password=U3MKWSJVLJZZ
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.debug=true

# =========================

# JWT

# =========================

jwt.secret=123456789012345678901234567890817682825
jwt.issuer=giproject
jwt.access.expSeconds=1800
jwt.refresh.expSeconds=604800
